https://console.firebase.google.com/u/0/project/agenda-8640a/database/agenda-8640a-default-rtdb/data
https://github.com/TonyTheVice/agenda


npm start
npm run electron

npm run build
npm run electron-builder --win --x64

16/11 - 5 horas
17/11 - 3 horas


Next steps:
- Make the squares show which days have notes(for month view only a color or something and for week view have the actual note with a max of three lines, the first 2 are notes and have a max width of the square and elipsis and the third one is just ellipsis. The notes are fetch from a prop coming from App.js)
- Change everything to material ui - icons, typography ...
    - Make month view and weekly view a single button and separate from Calendar component
- Keep changing styles
- Make a "All notes" view
    - Make it possible to send a notification(with sound) when the time comes for a note
    - Bug Check for notification trigger doesnt work for notes inserted currently
- Bug Check in app mode if we try to add an empty note it gives an error an its no longer inputable(cant write)
- Add a "next releases" page
    - Bug Check moving between weeks if we change to month go to that month and vice versa



View Calendar:

The user should be able to view a calendar interface that displays the current month with all the days.
The user should be able to click on any day to view or add notes.

Add Notes for a Specific Day:

The user can add notes for a specific day (e.g., tasks, reminders, events).
The user should be able to type and save notes for the selected day.
The yser should be able to add hour reminders for that note to get a notification.
Notes should persist until the user manually deletes them.

View Notes for a Specific Day:

The user should be able to view all notes added for a selected day.
Notes should be displayed in a simple list format under the selected day in the calendar.

Delete Notes:

The user can delete notes they've added for a specific day.
Deleted notes should be removed from the database and UI.

Edit Notes:

The user should be able to edit an existing note.
The changes should be updated in the database and reflected in the UI.

View Week/Month Overview:

The user can toggle between viewing the current day's notes, the entire week, or the full month.
This view should allow the user to easily navigate between days, weeks, and months.

Search Notes:

The user can search for notes containing certain keywords (e.g., "meeting", "birthday").
Results should be displayed in a list, grouped by the relevant day.